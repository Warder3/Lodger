{"version":3,"sources":["Links.js","Navbar.js","Names.js","NameList.js","Chores.js","ChoreList.js","PaginationBar.js","PersonalChores.js","Objects.js","Hero.js","App.js","index.js"],"names":["Links","className","id","href","target","Navbar","Names","names","setNames","perChores","perDifficulty","name","setName","currChore","onSubmit","e","preventDefault","type","placeholder","autoComplete","value","onChange","required","onClick","length","alert","some","item","key","NameList","chores","setChores","map","newList","filter","newChores","chore","includes","deleteName","Chores","totalDifficulty","setTotalDifficulty","setCurrChore","useState","setChore","difficulty","setDifficulty","index","Math","floor","random","nameScapeGoat","placeHolder","seperateChores","ChoreList","setCurrPage","c","current","newPerChores","deleteChore","PaginationBar","currPage","choresPerPage","ceil","PersonalChores","temp","setTemp","Objects","scapeGoat","setScapeGoat","Hero","lastChoreIndex","firstChoreIndex","currChores","slice","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a27da298.chunk.js","sourcesContent":["\nconst Links = () => {\n    return (\n        <div>\n            <ul className=\"link-list\">\n                <li className=\"links\" id=\"contact\"><a href=\"#\">Contact</a></li>\n                <li className=\"links\"><a href=\"https://github.com/Warder3?tab=repositories\" target=\"_blank\">Github</a></li>\n                <li className=\"links\"><a href=\"#\">About</a></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Links\n","import Links from './Links'\n\nconst Navbar = () => {\n    return (\n        <div className=\"navbar-container\">\n            <p id=\"brandname\"><a href=\"#\">Lodger</a></p>\n            <div className=\"links-container\">\n                <Links />\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar\n","import React, { useState } from 'react'\n\n\nconst Names = ({names, setNames, perChores, perDifficulty, name, setName, currChore}) => {\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setName('');        \n    }\n\n    const submit = () => {\n        if (names.length > 9) {\n            alert('Sorry, it seems you have too many roommates for me to handle.')\n            return\n        }\n        if (name == '') {\n            alert('Please submit a valid name') \n            return\n        } \n        if (names.some(item => item.name == name)) {\n            alert(`It seems that you two ${name}'s . Differentiate them by using their last names.`)\n            return\n        }\n\n        else {\n            setNames([...names, {name: name, key: name, perDifficulty: perDifficulty, perChores: perChores, currChore: currChore}])\n        }\n    }\n\n    return (\n        \n        <div id=\"roommateContainer\">\n            <p id=\"roommate\"> Roommates:</p>\n            <form id=\"form\" onSubmit={handleSubmit}>\n                <input \n                    type=\"text\"\n                    placeholder=\"Jon Doe\" \n                    autoComplete=\"off\" \n                    value={ name }\n                    onChange= {(e) => setName(e.target.value) } \n                    className=\"input-text\" \n                    required \n                />\n                <input \n                    onClick={ submit } \n                    type=\"submit\" \n                    value=\"+\" \n                    className=\"input-button\"\n                />\n            </form>\n            \n        </div>\n\n    )\n    \n}\n\nexport default Names\n","import React, {useState} from 'react'\nimport {BsTrash} from 'react-icons/bs'\n\nconst NameList = ({names, setNames, chores, setChores}) => {\n\n    // This function deletes names and deletes the person's chores from the entire chore list\n    const deleteName = (id) => {        \n        const newList = names.filter((name) => name.key != id.key)\n        setNames(newList)    \n\n        const newChores = chores.filter((chore) => !(id.perChores.includes(chore.key)))        \n        setChores(newChores)\n    }\n\n    return (\n        <div className=\"listContainer\">\n        {\n        names.map(item => (\n            <div key={item.name} className=\"listContent\">\n                <div className=\"roomie\"> {item.name} </div>\n                <BsTrash className=\"trashIcon\" onClick={() => deleteName(item)}/>\n            </div>\n        ))}\n\n        </div>\n    )\n}\n\nexport default NameList\n","import React, {useState} from 'react'\n\nconst Chores = ({chores, setChores, totalDifficulty, setTotalDifficulty, names, setNames, setCurrChore}) => {\n\n    const [chore, setChore] = useState('');\n    const [difficulty, setDifficulty] = useState(1);\n\n\n    // seperateChores function randomly assigns an name with a chore\n\n    const seperateChores = (names, chores) => {\n        let index = Math.floor(Math.random() * names.length)\n\n        let nameScapeGoat = [...names]\n\n        let placeHolder = [chore, ...nameScapeGoat[index].perChores]\n        nameScapeGoat[index].perChores = placeHolder\n        nameScapeGoat[index].perDifficulty += difficulty\n        nameScapeGoat[index].currChore = 0\n\n        setNames(nameScapeGoat) \n} \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    }\n\n    const submit = () => {\n        if (chore == '') {\n            alert('Please, add a chore')\n            return;\n        }\n        if (chore.length > 30) {\n            alert('Please, shorten your description of the chore')\n            return;\n        }\n        else {\n            setChores([{chore: chore, difficulty: difficulty, key: chore}, ...chores])\n            setTotalDifficulty(totalDifficulty+difficulty)   \n            seperateChores(names, chores);     \n            setChore('')\n            setDifficulty(1)            \n        }\n    }\n\n    const minus = () => {\n        if (difficulty < 2) {\n            alert('Please choose a difficulty level from 1-10')\n            return;\n        }\n        else {\n            setDifficulty(difficulty - 1)\n        }\n    }\n    const plus = () => {\n        if (difficulty > 9) {\n            alert('Please choose a difficulty level from 1-10')\n            return;\n        }\n        else {\n            setDifficulty(difficulty + 1)\n        }\n    }\n\n    return (\n        <div className=\"chores-header\"> \n            <p id=\"chore-title\">Chores & Difficulty:</p>\n            <div className=\"input-container\">\n                <form id=\"chore-form\" onSubmit={handleSubmit}>\n                    <input \n                        className=\"chore-input-text\"\n                        type=\"text\"\n                        placeholder=\"Jon Doe\"\n                        autoComplete=\"off\"\n                        onChange = {(e) => setChore(e.target.value)}\n                        value = {chore}\n                    />\n                    <div className=\"difficulty-container\">\n                        <button className=\"difficulty-minus\" onClick = {minus}>\n                            -\n                        </button>\n                        <p id=\"difficulty-level\">\n                            {difficulty}\n                        </p>\n                        <button className=\"difficulty-plus\" onClick = {plus}> \n                            +\n                        </button>\n                    </div>\n                    <input \n                        value=\"+\" \n                        className=\"chore-input-button\"\n                        type=\"submit\"\n                        onClick = {submit}\n                    />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Chores\n","import React, {useState} from 'react'\nimport {BsTrash} from 'react-icons/bs'\nimport Names from './Names'\n\nconst ChoreList = ({chores, setCurrPage, setChores, totalDifficulty, setTotalDifficulty, names, perDifficulty}) => {\n\n    const deleteChore = (c) => {\n        const newList = chores.filter((chore) => chore.key != c.key)\n        setChores(newList)\n\n        setTotalDifficulty(totalDifficulty - c.difficulty)\n\n        // GETS THE NAME THAT THE CHORE BELONGS TO \n        // SUBTRACTS FROM PERDIFFICULTY AND REMOVES IT FROM THE CHORE LIST\n\n        let current = names.filter((name) => name.perChores.includes(c.key))\n        current[0].perDifficulty -= c.difficulty\n\n        let newPerChores = current[0].perChores.filter((chore) => chore != c.chore)\n\n        current[0].perChores = newPerChores\n\n    }\n\n    \n\n\n    return (\n        chores.map(chore => \n            <div key={chore.key} className=\"chore-content-container\">\n                <div className=\"chore-content\">\n                    <p id=\"chore-name\">{chore.chore}</p>\n                    <section id=\"chore-content-right\">\n                        <p id=\"chore-difficulty\">Diff: {chore.difficulty}</p>\n                        <BsTrash \n                            className=\"trashIcon\" \n                            id=\"trashIcon-chores\" \n                            onClick = {() => deleteChore(chore)}\n                        />\n                    </section>\n                </div>\n            </div>      \n        )\n    )}\n\nexport default ChoreList\n","import React from 'react'\n\nconst PaginationBar = ({chores, currPage, setCurrPage, choresPerPage}) => {\n\n\n\n    const pageMinus = () => {\n        if (currPage === 1) {\n            alert('Too low')\n            return;\n        }\n        else {\n            setCurrPage(currPage-1);\n        }\n    }\n\n    const pagePlus = () => {\n        if (currPage == Math.ceil(chores.length / choresPerPage)) {\n            alert('Too High')\n            return; \n        }\n        else {\n            setCurrPage(currPage+1)\n        }\n    }\n\n    return (\n        <div className=\"pagination-bar-container\">\n            <button id=\"page-minus\" onClick={pageMinus}>\n                &#x2190;\n            </button>\n            <p id=\"currPage\">\n                {currPage}\n            </p>\n            <button id=\"page-plus\" onClick={pagePlus}>\n                &#x2192;\n            </button>\n        \n        </div>\n    )\n}\n\nexport default PaginationBar\n","import React, {useState} from 'react'\nimport Names from './Names'\n\nconst PersonalChores = ({name, currChore, setCurrChore}) => { \n    \n    const [temp, setTemp] = useState(name.currChore)\n\n    const choreMinus = () => {\n        if (temp == 0) {\n            return \n        }\n        else {\n            setTemp(temp - 1)                           \n        }\n    }\n\n    const chorePlus = () => {\n        if (temp >= name.perChores.length - 1) {\n            return;\n        }\n        else {                           \n            setTemp(temp+1)                              \n        }\n    }\n\n    const check = () => {\n        if (name.perChores.length > 0) {\n            return temp + 1\n        }\n        else {\n            return temp\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"personal-chores-container\">\n                <button id=\"per-minus\" onClick={choreMinus}> \n                    &#x2190; \n                </button>\n                <p className=\"per\">\n                    {name.perChores[temp]}\n                </p>        \n                <button id=\"per-plus\" onClick={chorePlus}> \n                    &#x2192; \n                </button>\n            </div>\n            <div className=\"count\">\n                {check()} / {name.perChores.length}\n            </div>\n        </div>\n    )\n}\n\nexport default PersonalChores\n","import React, {useState} from 'react'\nimport PersonalChores from './PersonalChores'\n\nconst Objects = ({names, chores, scapeGoat, setScapeGoat, currChore, setCurrChore}) => {\n\n    return (       \n        <div className='object-content-container'>\n             {names.map(name => (\n                <div className='object-content'>\n                    <div key={name.key} className='object-title'>\n                        <p className=\"object-name\">{name.name}</p>\n                        <p className=\"object-difficulty\">{name.perDifficulty}</p>\n                    </div>                    \n                    <PersonalChores \n                        name={name} \n                        names={names} \n                        scapeGoat={scapeGoat} \n                        setScapeGoat={setScapeGoat} \n                        currChore={currChore} \n                        setCurrChore={setCurrChore} />\n                </div>                \n             ))}\n        </div> \n    )\n}\n\nexport default Objects\n","import React, {useState, useEffect} from 'react'\nimport Names from './Names'\nimport NameList from './NameList'\nimport Chores from './Chores'\nimport ChoreList from './ChoreList'\nimport PaginationBar from './PaginationBar'\nimport Objects from './Objects'\n\nconst Hero = () => {\n\n    const [name, setName] = useState('');\n    const [names, setNames] = useState([]);\n    const [chores, setChores] = useState([]);\n\n    const [currPage, setCurrPage] = useState(1);\n    const [choresPerPage, setChoresPerPage] = useState(13);\n    const lastChoreIndex = currPage * choresPerPage;\n    const firstChoreIndex = lastChoreIndex - choresPerPage;\n    const currChores = chores.slice(firstChoreIndex, lastChoreIndex)\n\n    const [totalDifficulty, setTotalDifficulty] = useState(0);\n\n    const [perChores, setPerChores] = useState([]);\n    const [perDifficulty, setPerDifficulty] = useState(0);\n    \n    const [currChore, setCurrChore] = useState(0);  \n    const [scapeGoat, setScapeGoat] = useState('')    \n\n    return (\n\n        <div className=\"hero-container\">\n            <div className=\"names-container\">\n                <Names \n                    names={names} \n                    setNames={setNames} \n                    perChores={perChores}\n                    perDifficulty={perDifficulty}                      \n                    name={name}\n                    setName={setName}     \n                    currChore={currChore}    \n                    />\n\n                <NameList \n                    names={names} \n                    setNames={setNames} \n                    chores={chores}\n                    setChores={setChores}/>                    \n\n            </div>\n            <div className=\"chores-container\">\n                <Chores \n                    chores={chores} \n                    setChores={setChores} \n                    totalDifficulty={totalDifficulty} \n                    setTotalDifficulty={setTotalDifficulty} \n                    names={names}\n                    setNames={setNames}    \n                    scapeGoat={scapeGoat}\n                    setScapeGoat={setScapeGoat}  \n                    currChore={currChore}\n                    setCurrChore={setCurrChore}                                           \n                />\n\n                <ChoreList         \n                    chores={currChores} \n                    setCurrPage={setCurrPage} \n                    setChores={setChores} \n                    totalDifficulty={totalDifficulty} \n                    setTotalDifficulty={setTotalDifficulty}\n                    names={names}\n                    perDifficulty={perDifficulty}/>\n\n\n                <PaginationBar \n                    chores={chores} \n                    currPage={currPage} \n                    setCurrPage={setCurrPage} \n                    choresPerPage={choresPerPage}/>\n\n            </div>  \n            <div className=\"objects-container\">\n                <Objects  \n                    names={names} \n                    chores={chores}\n                    totalDifficulty={totalDifficulty}     \n                    scapeGoat={scapeGoat}\n                    setScapeGoat={setScapeGoat}  \n                    currChore={currChore} \n                    setCurrChore={setCurrChore}                     \n                    />\n            </div>          \n        </div>\n    )\n}\n\nexport default Hero\n","import Navbar from './Navbar'\nimport Hero from './Hero'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"nav_bar\">\n        <Navbar />\n      </div>   \n      <section>\n        <Hero />\n      </section>   \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}